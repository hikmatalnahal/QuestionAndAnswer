{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hikmat\\\\hikmat7\\\\src\\\\Component\\\\QA.jsx\",\n  _s = $RefreshSig$();\nimport { Accordion, Row } from \"react-bootstrap\";\nimport { useState } from \"react\"; // Import useState\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QA = ({\n  dataview\n}) => {\n  _s();\n  const [activeKey, setActiveKey] = useState(null); // Initialize activeKey state\n\n  const handleAccordionSelect = eventKey => {\n    // Toggle the accordion item when clicked\n    setActiveKey(activeKey === eventKey ? null : eventKey);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Accordion, {\n        activeKey: activeKey,\n        onSelect: handleAccordionSelect,\n        children: dataview.length >= 1 ? dataview.map((item, index) => /*#__PURE__*/_jsxDEV(Accordion.Item, {\n          eventKey: item.id,\n          children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"m-auto\",\n              children: item.q\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"px-3 d-inline \",\n              children: item.a\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-color\",\n              children: \"\\u0645\\u0633\\u062D \\u0627\\u0644\\u0633\\u0624\\u0627\\u0644 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 29\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"fs-4 text-center\",\n          children: \"\\u0644\\u0627 \\u062A\\u0648\\u062C\\u062F \\u0627\\u0633\\u0626\\u0644\\u0629\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(QA, \"YutTTx7mZwDUp35e7hc6f7IisV0=\");\n_c = QA;\nexport default QA;\nvar _c;\n$RefreshReg$(_c, \"QA\");","map":{"version":3,"names":["Accordion","Row","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","QA","dataview","_s","activeKey","setActiveKey","handleAccordionSelect","eventKey","children","onSelect","length","map","item","index","Item","id","Header","className","q","fileName","_jsxFileName","lineNumber","columnNumber","Body","a","_c","$RefreshReg$"],"sources":["C:/Users/hikmat/hikmat7/src/Component/QA.jsx"],"sourcesContent":["import { Accordion, Row } from \"react-bootstrap\";\r\nimport { useState } from \"react\"; // Import useState\r\n\r\nconst QA = ({ dataview }) => {\r\n    const [activeKey, setActiveKey] = useState(null); // Initialize activeKey state\r\n\r\n    const handleAccordionSelect = (eventKey) => {\r\n        // Toggle the accordion item when clicked\r\n        setActiveKey(activeKey === eventKey ? null : eventKey);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Accordion activeKey={activeKey} onSelect={handleAccordionSelect}>\r\n                    {dataview.length >= 1 ? (\r\n                        dataview.map((item, index) => (\r\n                            <Accordion.Item key={index} eventKey={item.id}>\r\n                                <Accordion.Header>\r\n                                    <div className=\"m-auto\">{item.q}</div>\r\n                                </Accordion.Header>\r\n                                <Accordion.Body>\r\n                                    <div className=\"px-3 d-inline \">{item.a}</div>\r\n                                    <button className=\"btn-color\">مسح السؤال </button>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n                        ))\r\n                    ) : (\r\n                        <h2 className=\"fs-4 text-center\">لا توجد اسئلة</h2>\r\n                    )}\r\n                </Accordion>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default QA;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,GAAG,QAAQ,iBAAiB;AAChD,SAASC,QAAQ,QAAQ,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,EAAE,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElD,MAAMU,qBAAqB,GAAIC,QAAQ,IAAK;IACxC;IACAF,YAAY,CAACD,SAAS,KAAKG,QAAQ,GAAG,IAAI,GAAGA,QAAQ,CAAC;EAC1D,CAAC;EAED,oBACIT,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACIV,OAAA,CAACH,GAAG;MAAAa,QAAA,eACAV,OAAA,CAACJ,SAAS;QAACU,SAAS,EAAEA,SAAU;QAACK,QAAQ,EAAEH,qBAAsB;QAAAE,QAAA,EAC5DN,QAAQ,CAACQ,MAAM,IAAI,CAAC,GACjBR,QAAQ,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBf,OAAA,CAACJ,SAAS,CAACoB,IAAI;UAAaP,QAAQ,EAAEK,IAAI,CAACG,EAAG;UAAAP,QAAA,gBAC1CV,OAAA,CAACJ,SAAS,CAACsB,MAAM;YAAAR,QAAA,eACbV,OAAA;cAAKmB,SAAS,EAAC,QAAQ;cAAAT,QAAA,EAAEI,IAAI,CAACM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC,eACnBxB,OAAA,CAACJ,SAAS,CAAC6B,IAAI;YAAAf,QAAA,gBACXV,OAAA;cAAKmB,SAAS,EAAC,gBAAgB;cAAAT,QAAA,EAAEI,IAAI,CAACY;YAAC;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC9CxB,OAAA;cAAQmB,SAAS,EAAC,WAAW;cAAAT,QAAA,EAAC;YAAW;cAAAW,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA,GAPAT,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACnB,CAAC,gBAEFxB,OAAA;UAAImB,SAAS,EAAC,kBAAkB;UAAAT,QAAA,EAAC;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MACrD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX;EAAC,gBACR,CAAC;AAEX,CAAC;AAACnB,EAAA,CA/BIF,EAAE;AAAAwB,EAAA,GAAFxB,EAAE;AAiCR,eAAeA,EAAE;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}